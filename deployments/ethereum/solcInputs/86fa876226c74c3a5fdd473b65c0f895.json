{
  "language": "Solidity",
  "sources": {
    "contracts/Helper.sol": {
      "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.12;\n\ninterface IBentoBox {\n  function setMasterContractApproval(\n    address user,\n    address masterContract,\n    bool approved,\n    uint8 v,\n    bytes32 r,\n    bytes32 s\n  ) external;\n\n  function deposit(\n    address token,\n    address from,\n    address to,\n    uint256 amount,\n    uint256 share\n  ) external payable; \n}\n\ncontract Helper {\n  \n  IBentoBox public immutable bentoBox;\n\n  constructor(IBentoBox _bentoBox) public {\n    bentoBox = _bentoBox;\n  }\n\n  function depositAndApprove(\n    address user,\n    address masterContract,\n    bool approved,\n    uint8 v,\n    bytes32 r,\n    bytes32 s\n  ) public payable {\n    \n    bentoBox.deposit{value: msg.value}(address(0), address(this), msg.sender, msg.value, 0);\n    \n    bentoBox.setMasterContractApproval(user, masterContract, approved, v, r, s);\n\n  }\n  \n}"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    },
    "libraries": {
      "": {
        "__CACHE_BREAKER__": "0x00000000d41867734bbee4c6863d9255b2b06ac1"
      }
    }
  }
}